[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Bren’s Networking Notes",
    "section": "",
    "text": "Hi all,\nI threw this page together to host some notes I’ve put together during my time studying for CCNP ENARSI. The navigation follows the flow of the exam blueprint. I hope you find something useful or informative here."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "BGP.html",
    "href": "BGP.html",
    "title": "BGP",
    "section": "",
    "text": "AD 200 for iBGP, 20 for eBGP\nForms connection over TCP port 179\nOnly advertises best routes, all others not advertised\nBest-path Algorithm\n\nWeight (Highest)\nLocal Preference (Highest)\nOriginated locally\nAS_PATH (Shortest)\nOrigin code (IGP > EGP > ?)\nMED (Lowest)\nPath (eBGP > iBGP)\nIGP metric (Lowest)\nRoute age (Oldest, only compared when routes from different eBGP peers)\nRID (Lowest)\n\n\nWe Love Oranges AS Oranges Mean Pure Refreshment\n\niBGP\n\nTTL of 255 by default\nDoes not change next-hop by default - can be changed with neighbor <ip-address | peer-group-name> next-hop-self\nUses split horizon1 for loop prevention\n\neBGP\n\nTTL of 1 by default - can be increased with neighbor <ip> ebgp-multihop 255\nCan also use neighbor <ip> ttl-security hops <hop-count>\nDifference between above is that eBGP-multihop sets the maximum range allowed, whereas TTL-security sets the exact range\nIf peering with different update source but not through additional hops, can use neighbor <ip> disable-connected-check\nDoes change next-hop by default\n\nPeer groups\n\nCan be used when multiple neighbors have the same requirements\nUse neighbor <name> peer-group to set up peer-group, then perform config under neighbor <name> <command>\nPeer groups applied to neighbor with neighbor <ip> peer-group <name>\nCan check with show ip bgp peer-group\nPeer groups are natively set up on the back end to limit CPU usage - only purpose is simplification of config\n\nECMP\n\nCan enable load-balancing with maximum paths <path#> command\nOnly takes effect when many parameters on routes match - Weight, local preference, AS-PATH (both numbers and lengths), origin code, MED, IGP metric\n\nExact match of prefix in route table required for advertisement - configuring null route to prefix common\nGood idea to change update source to a loopback interface with neighbor <ip> update-source <loopback>\nclear ip bgp * soft useful to refresh route table without tearing down neighborships\nSelectively advertise default route with neighbor <IP> default-originate [route-map <CONDITION>]\nAdvertise a different AS to a peer than router bgp AS with neighbor <IP> local-as <OldAS> - useful in migration\nneighbor <IP> fall-over can be used to immediately tear down session if IGP route to neighbor disappears"
  },
  {
    "objectID": "bgp.html",
    "href": "bgp.html",
    "title": "BGP",
    "section": "",
    "text": "- AD 200 for iBGP, 20 for eBGP\n- Forms connection over TCP port 179\n- Only advertises best routes, all others not advertised\n- **Best-path Algorithm**\n1. Weight (Highest)\n\n2. Local Preference (Highest)\n\n3. Originated locally\n\n4. AS_PATH (Shortest)\n\n5. Origin code (IGP \\> EGP \\> ?)\n\n6. MED (Lowest)\n\n7. Path (eBGP \\> iBGP)\n\n8. IGP metric (Lowest)\n\n9. Route age (Oldest, only compared when routes from different eBGP peers)\n\n10. RID (Lowest)\n\n- \\*\\*W\\*\\*e \\*\\*L\\*\\*ove \\*\\*O\\*\\*ranges \\*\\*AS\\*\\* \\*\\*O\\*\\*ranges \\*\\*M\\*\\*ean \\*\\*P\\*\\*ure \\*\\*R\\*\\*efreshment\n- **iBGP**\n- TTL of 255 by default\n\n- Does not change next-hop by default - can be changed with \\`neighbor \\<ip-address \\| peer-group-name\\> next-hop-self\\`\n\n- Uses split horizon\\^\\[BGP split horizon prevents loops in iBGP by disallowing advertisements recieved from one peer to be advertised on to another. This makes full mesh a requirement for iBGP unless using route reflectors and/or confederation\\] for loop prevention\n- **eBGP**\n- TTL of 1 by default - can be increased with \\`neighbor \\<ip\\> ebgp-multihop 255\\`\n\n- Can also use \\`neighbor \\<ip\\> ttl-security hops \\<hop-count\\>\\`\n\n- Difference between above is that \\`eBGP-multihop\\` sets the \\*maximum range\\* allowed, whereas \\`TTL-security\\` sets the \\*exact range\\*\n\n- If peering with different update source but not through additional hops, can use \\`neighbor \\<ip\\> disable-connected-check\\`\n\n- Does change next-hop by default\n- **Peer groups**\n- Can be used when multiple neighbors have the same requirements\n\n- Use \\`neighbor \\<name\\> peer-group\\` to set up peer-group, then perform config under \\`neighbor \\<name\\> \\<command\\>\\`\n\n- Peer groups applied to neighbor with \\`neighbor \\<ip\\> peer-group \\<name\\>\\`\n\n- Can check with \\`show ip bgp peer-group\\`\n\n- Peer groups are natively set up on the back end to limit CPU usage - only purpose is simplification of config\n- **ECMP**\n- Can enable load-balancing with \\`maximum paths \\<path#\\>\\` command\n\n- Only takes effect when many parameters on routes match - Weight, local preference, AS-PATH (both numbers and lengths), origin code, MED, IGP metric\n- Exact match of prefix in route table required for advertisement - configuring null route to prefix common\n- Good idea to change update source to a loopback interface with `neighbor <ip> update-source <loopback>`\n- `clear ip bgp * soft` useful to refresh route table without tearing down neighborships\n- Selectively advertise default route with `neighbor <IP> default-originate [route-map <CONDITION>]`\n- Advertise a different AS to a peer than `router bgp` AS with `neighbor <IP> local-as <OldAS>` - useful in migration\n- `neighbor <IP> fall-over` can be used to immediately tear down session if IGP route to neighbor disappears\n---\n- **Summarization**\n- Primarily done with the \\`aggregate address \\<prefix\\> \\<mask\\>\\` command\n\n    - Only works for prefixes already in BGP table\n\n    - Router performing summary installs null route into table for aggregate\n\n    - Should be used with \\`as-set\\` suffix - this will include AS-PATH information and prevent loops/suboptimal routes\n\n        - Inherits community values of any specific prefixes\n\n        - For example, if one of four specific prefixes has a \\`no-export\\` community, summary with \\`as-set\\` will as well\n\n        - These can be modified or stripped with \\`attribute-map\\` suffix\n\n        - Can also use \\`advertise-map\\` suffix to select specific prefix which will determine attributes of summary\n\n    - By default does not suppress specific prefixes - \\`summary-only\\` at the end of command will\n\n    - Prefixes summarized in this way have \\*ATOMIC_AGGREGATE\\* attribute assigned\n\n    - Also assigned \\*AGGREGATOR\\* attribute specifying AS number and RID of aggregator\n\n    - Can selectively suppress specifc prefixes with \\`suppress-map\\` - all prefixes in map will be suppressed:\n\n        \\`\\`\\`\n\n        ip prefix-list SUPPRESS_PREFIX 150.1.1.0/24\n\n        !\n\n        route-map SUPPRESS_MAP permit 10\n\n        match ip address prefix-list SUPPRESS_PREFIX\n\n        !\n\n        router bgp 200  \n\n        aggregate-address 150.1.0.0 mask 255.255.0.0 suppress-map SUPPRESS_MAP as-set\n\n        \\`\\`\\`\n\n    - Can also use \\`unsuppress-map\\` combined with summary-only to advertise specific prefixes \\^66c6ab\n\n    - Since this is per-neighbor it can be used for inbound path manipulation:\n\n    \\`\\`\\`\n\n        ip prefix-list NET_1 permit 10.0.1.0/24\n\n        !\n\n        route-map UNSUPPRESS_MAP permit 10\n\n        match ip address prefix-list NET_1\n\n        !       \n\n        router bgp 200\n\n        aggregate-address 10.0.0.0 255.255.252.0 summary-only as-set\n\n        neighbor 155.1.37.7 unsuppress-map UNSUPPRESS_MAP\n\n    \\`\\`\\`\n\n- Alternatively, can advertise a summary prefix in IGP with the \\`network\\` command - commonly done with a static null route\n- **Route Reflection**\n- Used to bypass full mesh requirement in iBGP\n\n- Configured with \\`neighbor \\<ip\\> route-reflector-client\\` on route reflector\n\n- Reflector must have full mesh if full reachability is required (unless using multiple reflectors)\n\n- Abide by following 3 rules:\n\n1. Routes learned from EBGP peers can be sent to other EBGP peers, clients, and non-clients.\n\n2. Routes learned from client peers can be sent to EBGP peers, other client peers, and non-clients.\n\n3. Routes learned from non-client peers can be sent to EBGP peers, and client peers, \\_but not other non-clients\\_.\n\n- Functions like DR/BDR in \\[\\[OSPF\\]\\] by default - does not insert itself into transit path\n\n- Can be forced to transit RR with \\`next-hop-self\\` command if desired\n- **Communities**\n- Activated for transport to peers with \\`neighbor \\<ip\\> send-community\\`\n\n- Made more readable with global config command \\`ip bgp-community new-format\\`\n\n- Applied to prefixes with \\`set community \\<value1\\> \\<value2\\> ... \\<valueN\\>\\` in route-map\n\n- To add communities without affecting existing, use \\`set community additive \\<value1\\> \\<value2\\> ... \\<valueN\\>\\`\n\n- Matched with \\`community-lists\\` - like ACLs, both standard and expanded (extended) versions\n\n    - Standard version uses 1-99, only permits or denies communities\n\n    \\`\\`\\`\n\n    ip community-list 1 permit 100:10 100:20\n\n    ip community-list 1 deny no-export\n\n    \\`\\`\\`\n\n    - Standard version uses AND logic with multiple communities in one line, OR logic with multiple lines\n\n    - Expanded version functions the same but adds \\*\\*regular expression\\*\\* functionality \\^\\[\\[\\[BGP#\\^f8087d\\|BGP regexp\\]\\]\\]\n\n- \\*\\*Sample config of setting community:\\*\\*\n\n    \\`\\`\\`\nip as-path access-list 1 permit 60$\n!\nroute-map SET_COMMUNITY permit 10\nmatch as-path 1\nset community 100:200\n!\nroute-map SET_COMMUNITY permit 100\n        !\nrouter bgp 200\nneighbor 155.1.45.4 send-community\nneighbor 155.1.45.4 route-map SET_COMMUNITY out\n    \\`\\`\\`\n\n- \\*\\*Sample config of matching community:\\*\\*\n\n    \\`\\`\\`\n\n    ip community-list standard 100:200 permit 100:200\n!\nroute-map SET_LOCAL_PREFERENCE permit 10\nmatch community 100:200\nset local-preference 200\n!\nroute-map SET_LOCAL_PREFERENCE permit 100\n!\nrouter bgp 100\nneighbor 155.1.13.3 route-map SET_LOCAL_PREFERENCE in\n    \\`\\`\\`\n\n- \\*\\*Well-known communities:\\*\\*\n\n    - \\*\\*no-advertise\\*\\*\n\n        - Set with \\`set community no-advertise\\`\n\n        - Signals to not advertise the prefix with this community to \\*any peer\\*\n\n    - \\*\\*no-export\\*\\*\n\n        - Set with \\`set community no-export\\`\n\n        - Signals to not export this prefix from the AS - can be advertised \\*within AS only\\*\n\n    - \\*\\*local-as\\*\\*\n\n        - Set with \\`set community local-as\\`\n\n        - Functions the same as \\`no-export\\` but also disallows advertisement \\*between confederation sub-as\\*\n\n- Deleting communities done with a \\`community-list\\` referencing community to be deleted, then using \\`set comm-list \\<comlist\\> delete\\` under route-map\n- **Confederation**\n- Used to reduce full-mesh BGP requirements by splitting one public AS into smaller sub-as\n\n- Sub-as use eBGP advertisement rules between each other, removing full mesh requirement\n\n- Notable exception to eBGP behavior is that \\*next-hop is not modified\\* between confederation peers\n\n- Configured by using sub-as with \\`router bgp\\` command and using \\`bgp confederation identifier \\<as\\>\\` under router bgp\n\n- Other sub-as defined with \\`bgp confederation peers \\<sub-as\\>\\` under router bgp\n\n- Can be used in combination with route reflection\n- **Next-hop modification**\n- Other than next-hop-self, you can also manually define next-hop with a route-map:\n\n    \\`\\`\\`\n\n    route-map SET_NEXT_HOP_FROM_R8 permit 10\n\n    set ip next-hop 155.1.58.8\n\n    !\n\n    router bgp 100\n\n    neighbor 155.1.58.8 route-map SET_NEXT_HOP_FROM_R8 in\n\n    \\`\\`\\`\n- **BGP regexp** ^f8087d\n- Can be used to search for specifc AS-PATHs in table - for example: \\`show ip bgp regexp \\^\\$\\`\n\n- Above will show prefixes originated locally with the AS. Cheat sheet \\[here.\\](http://gponsolution.com/bgp-regular-expressions-cheat-sheet.html)\n\n- Can be used to filter with ACLs with ip as-path: \\`ip as-path access-list 1 permit \\_54\\$\\`\n\n- Then use \\`match as-path\\` under a route-map to apply modifications\n- **BGP backdoor**\n- Created to prefer links via IGP over eBGP (raises AD of specific prefix to 200)\n\n- Configured with \\`network \\<subnet\\> mask \\<netmask\\> backdoor\\` under router BGP\n- **Conditional Advertising**\n- Allows advertising based on existence of another prefix in table\n\n- Configured with \\`neighbor \\<IP\\> advertise-map MAP1 \\[non-exist\\|exist-map\\] MAP2\\`\n\n- First map is prefix to advertise, second is prefix to monitor\n\n- BGP checks on existence of MAP2 every 60 seconds\n- **Conditional Route Injection**\n- Functions similar to \\[\\[BGP#\\^66c6ab\\|unsuppress map\\]\\] in allowing specific prefix advertisement from aggregate\n\n- Difference is it can be configured on routers not originating the aggregate route\n\n- One map matches aggregate and router originating summary, other map matches specific prefix to advertise\n\n- Configuration:\n\n    \\`\\`\\`\n\n    ip prefix-list INJECT_PREFIX permit 10.0.1.0/24\nip prefix-list AGGREGATE permit 10.0.0.0/22\nip prefix-list ROUTE_SOURCE permit 155.1.37.3/32\n!\nroute-map INJECT_MAP permit 10\nset ip address prefix-list INJECT_PREFIX\nset origin igp\n!\nroute-map EXIST_MAP permit 10\nmatch ip address prefix-list AGGREGATE\nmatch ip route-source prefix-list ROUTE_SOURCE\n!\nrouter bgp 300\nbgp inject-map INJECT_MAP exist-map EXIST_MAP\n    \\`\\`\\`\n- **Route Filtering**\n- Preferably done per-neighbor with route-maps, but can be applied directly with prefix list or ACL\n\n- \\`neighbor 155.1.79.9 route-map FROM_R9 in\\` for a route-map, with a deny in the route-map\n\n- \\`neighbor 192.10.1.254 prefix-list BLOCK_222 in\\` for prefix-list\n\n- \\`neighbor 192.10.1.254 distribute-list BLOCK_222 in\\` can be used for ACL filtering, not recommended\n- **Maximum prefix**\n- \\`maximum-prefix\\` can be used to limit allowed prefix \\# from a peer\n\n- By default shuts down connection, can use \\`warning-only\\` or \\`restart \\<minutes\\>\\` prefixes if desired\n\n- For example: \\`neighbor 155.1.108.10 maximum-prefix 20 80 restart 3\\`\n- **BGP Dampening**\n- Can be used to prevent table instability from flapping routes\n\n- Assigned to all prefixes with \\`bgp dampening \\[\\<Half_Life\\> \\<ReuseLimit\\> \\<SuppressLimit\\> \\<MaximumSuppressTime\\>\\]\\`\n\n- Can also be assigned to specific prefixes with route-maps:\n\n    \\`\\`\\`\n\n    ip as-path access-list 100 permit \\_100\\$\n!\nroute-map DAMPENING\nmatch as-path 100\nset dampening 4 750 2000 16\n!\nrouter bgp 200\nbgp dampening route-map DAMPENING\n    \\`\\`\\`\n- **BGP Outbound Route Filtering**\n- Allows you to push a route filter to a remote neighbor\n\n- Benefit is decrease in unnecessary route information as filtering occurs on neighbor before prefixes sent\n\n- Both peers must have orf capability enabled for it to function\n\n- Verified locally with: \\`show ip bgp neighbors \\<ip\\>\\`, remotely with: \\`show ip bgp neighbors \\<ip\\> received prefix-filter\\`\n\n    \\`\\`\\`\n\n    ip prefix-list ORF deny 112.0.0.0/8\n\n    ip prefix-list ORF permit 0.0.0.0/0 le 32\n\n    !\n\n    router bgp 100\n\n    neighbor 155.1.45.5 capability orf prefix-list both\n\n    neighbor 155.1.45.5 prefix-list ORF in\n\n    \\`\\`\\`\n- **See [[Redistribution#^e6bf27|redistribution]] for details on that**\n---\n- **Useful debugs**\n- \\`debug ip bgp\\`\n\n- \\`debug ip bgp updates\\`\n---\n#### BGP Attributes:\n##### Weight\n- Only used on the router where it is configured\n- Used to affect outbound routing.\n- Higher value is better - default is 0 (32768 if originated locally)\n- Highest in BGP path selection algorithm\n- Cisco proprietary\n- Configuration:\n\\`\\`\\`\n\nroute-map SET_WEIGHT\n\nmatch ip address\\|ip as-path ...\n\nset weight 100\n\n!\n\nrouter bgp 100\n\nneighbor \\<ip\\> route-map SET_WEIGHT in\n\n\\`\\`\\`\n##### Local Preference\n- Locally significant (to the AS), does not transit outside AS.\n- Used to affect outbound routing.\n- Higher value is better - defaults to 100\n- Configuration:\n\\`\\`\\`\n\nroute-map SET_LP\n\nmatch ip address\\|ip as-path ...\n\nset local-preference 1000\n\n!\n\nrouter bgp 100\n\nneighbor \\<ip\\> route-map SET_LP in\n\n\\`\\`\\`\n##### AS-PATH\n- Changed for each AS prefix transits through\n- Used to affect inbound routing\n- Can be used to influence path selection with as-path prepending\n- Can be ignored with `bgp bestpath as-path ignore` - this is dangerous and not recommended\n- Can be limited in length with `bgp maxas-limit <#>`\n- Configuration:\n\\`\\`\\`\n\nroute-map PREPEND\n\nmatch ip address\\|ip as-path ...\n\nset as-path prepend 100 100 100\n\n    !\n\nrouter bgp 100\n\nneighbor \\<ip\\> route-map PREPEND out\n\n\\`\\`\\`\n##### Origin Code\n- Rarely used to influence path selection - inflexible\n- IGP > EGP > Incomplete\n- Could affect inbound or outbound routing\n- Configuration:\n\\`\\`\\`\n\nroute-map ORIGIN\n\nmatch ip address\\|ip as-path ...\n\nset origin \\[igp\\|egp\\|incomplete\\]\n\n\n\nrouter bgp 100\n\nneighbor \\<ip\\> route-map ORIGIN out\n\n\\`\\`\\`\n##### MED\n- By default only compared when originating from same AS\n- Lowest is best - defaults to 0\n- Used to affect inbound routing\n- Can use `bgp always-compare-med` under router BGP to allow comparison of MED between different ASs\n- Configuration:\n\\`\\`\\`\n\nroute-map MED\n\nmatch ip address\\|ip as-path ...\n\nset metric 1000\n\n\n\nrouter bgp 100\n\nneighbor \\<ip\\> route-map MED out\n\n\\`\\`\\`"
  },
  {
    "objectID": "AAA.html",
    "href": "AAA.html",
    "title": "Networking Notes",
    "section": "",
    "text": "Authentication, authorization and accounting\nFramework for controlling access to resources, monitoring usage, ensuring correct permissions\nUseful debugs\n\ndebug aaa authentication - Debug all AAA auth\ndebug radius authentication - Debug for radius auth\ndebug tacacs authentication - Debug for tacacs auth\ndebug aaa protocol local - Debug local authentication\nStandard AAA Config\n\nusername <user> privilege 15 secret <pass> ! good idea to have local auth as backup\n!\naaa new-model\naaa group server tacacs+ <group-name>\n server-private 10.20.5.35 single-connection key <key>\n ip vrf forwarding Mgmt-intf\n ip tacacs source-interface GigabitEthernet0\n!\n! alternatively can define the server like this\n!\ntacacs server <serv-name>\n address ipv4 10.20.5.35\n key <key>\naaa group server tacacs+ <group-name>\n server name <serv-name>\n ip tacacs source-interface GigabitEthernet0\n!\naaa authentication login <list-name> group <group-name> local\naaa authorization exec <list-name> group <group-name> local if-authenticated\naaa authorization commands 15 <list-name> group <group-name> local if-authenticated\naaa accounting commands 1 <list-name> start-stop group <group-name>\naaa accounting commands 15 <list-name> start-stop group <group-name>\naaa session-id common\n!\n! using the list-name 'default' will apply the AAA methods to all lines without additional config\n!\nline vty 0 4\nlogin authentication <list-name>"
  },
  {
    "objectID": "DMVPN.html",
    "href": "DMVPN.html",
    "title": "Making sharable documents with Quarto",
    "section": "",
    "text": "Used for large-scale, scalable deployment of mGRE tunnels in a hub-and-spoke topology\nCan establish connectivity through NAT, DHCP\nUtilizes NHRP (Next Hop Resolution Protocol)\nCommon to advertise summary route from hub, keep all spokes as stubs\n[[VRF#^187895|Front door VRFs]] used to bypass recursive routing issues with overlay 31b8e172-b470-440e-83d8-e6b185028602:dAB5AHAAZQA6AFoAUQBBAHgAQQBEAGcAQQBNAFEAQQA1AEEARABZAEEATQBBAEEAMQBBAEMAMABBAE0AQQBCAGgAQQBHAE0AQQBaAEEAQQB0AEEARABRAEEAWgBnAEIAaABBAEcAVQBBAEwAUQBBADQAQQBHAEkAQQBPAFEAQQA1AEEAQwAwAEEATwBRAEIAagBBAEQARQBBAFkAZwBBADMAQQBHAEkAQQBaAEEAQQAzAEEARwBNAEEATQBBAEIAbQBBAEQARQBBAAoAcABvAHMAaQB0AGkAbwBuADoATQB3AEEAMABBAEQAQQBBAAoAcAByAGUAZgBpAHgAOgAKAHMAbwB1AHIAYwBlADoATABRAEEAdABBAEMAMABBAEMAZwBBAHQAQQBDAEEAQQBLAGcAQQBxAEEARQBRAEEAVABRAEIAVwBBAEYAQQBBAFQAZwBBAGcAQQBGAEEAQQBhAEEAQgBoAEEASABNAEEAWgBRAEIAegBBAEMAbwBBAEsAZwBBAEsAQQBBAGsAQQBMAFEAQQBnAEEAQwBvAEEASwBnAEIAUQBBAEcAZwBBAFkAUQBCAHoAQQBHAFUAQQBJAEEAQQB4AEEAQwBvAEEASwBnAEEASwBBAEEAawBBAEMAUQBBAHQAQQBDAEEAQQBRAFEAQgBzAEEARwB3AEEASQBBAEIAMABBAEgASQBBAFkAUQBCAG0AQQBHAFkAQQBhAFEAQgBqAEEAQwBBAEEAWQBnAEIAbABBAEgAUQBBAGQAdwBCAGwAQQBHAFUAQQBiAGcAQQBnAEEASABNAEEAYwBBAEIAdgBBAEcAcwBBAFoAUQBCAHoAQQBDAEEAQQBhAFEAQgB1AEEAQwBBAEEAZABBAEIAbwBBAEcAawBBAGMAdwBBAGcAQQBHAFEAQQBaAFEAQgB6AEEARwBrAEEAWgB3AEIAdQBBAEMAQQBBAGIAUQBCADEAQQBIAE0AQQBkAEEAQQBnAEEASABRAEEAYwBnAEIAaABBAEcANABBAGMAdwBCAHAAQQBIAFEAQQBJAEEAQgAwAEEARwBnAEEAWgBRAEEAZwBBAEcAZwBBAGQAUQBCAGkAQQBDAHcAQQBJAEEAQgB1AEEARwA4AEEASQBBAEIAegBBAEgAQQBBAGIAdwBCAHIAQQBHAFUAQQBMAFEAQgB6AEEASABBAEEAYgB3AEIAcgBBAEcAVQBBAEkAQQBCADAAQQBIAFUAQQBiAGcAQgB1AEEARwBVAEEAYgBBAEIAegBBAEMAQQBBAFkAUQBCAHkAQQBHAFUAQQBJAEEAQgBtAEEARwA4AEEAYwBnAEIAdABBAEcAVQBBAFoAQQBBAEsAQQBBAGsAQQBMAFEAQQBnAEEAQwBvAEEASwBnAEIAUQBBAEcAZwBBAFkAUQBCAHoAQQBHAFUAQQBJAEEAQQB5AEEAQwBvAEEASwBnAEEASwBBAEEAawBBAEMAUQBBAHQAQQBDAEEAQQBRAFEAQgBzAEEARwB3AEEAYgB3AEIAMwBBAEgATQBBAEkAQQBCAHoAQQBIAEEAQQBiAHcAQgByAEEARwBVAEEATABRAEIAMABBAEcAOABBAEwAUQBCAHoAQQBIAEEAQQBiAHcAQgByAEEARwBVAEEASQBBAEIAMABBAEgASQBBAFkAUQBCAG0AQQBHAFkAQQBhAFEAQgBqAEEAQwBBAEEAWQBnAEIANQBBAEMAQQBBAGIAUQBCAGgAQQBHAHMAQQBhAFEAQgB1AEEARwBjAEEASQBBAEIAaABBAEcAdwBBAGIAQQBBAGcAQQBIAFEAQQBkAFEAQgB1AEEARwA0AEEAWgBRAEIAcwBBAEgATQBBAEkAQQBBAG8AQQBHAGsAQQBiAGcAQgBqAEEARwB3AEEAZABRAEIAawBBAEcAawBBAGIAZwBCAG4AQQBDAEEAQQBjAHcAQgB3AEEARwA4AEEAYQB3AEIAbABBAEgATQBBAEsAUQBBAGcAQQBHADAAQQBkAFEAQgBzAEEASABRAEEAYQBRAEIAdwBBAEcAOABBAGEAUQBCAHUAQQBIAFEAQQBDAGcAQQBKAEEAQQBrAEEATABRAEEAZwBBAEYAUQBBAGEAQQBCAHAAQQBIAE0AQQBJAEEAQgBoAEEARwB3AEEAYgBBAEIAdgBBAEgAYwBBAGMAdwBBAGcAQQBIAE0AQQBjAEEAQgB2AEEARwBzAEEAWgBRAEIAegBBAEMAQQBBAGQAQQBCAHYAQQBDAEEAQQBaAGcAQgB2AEEASABJAEEAYgBRAEEAZwBBAEgAUQBBAGQAUQBCAHUAQQBHADQAQQBaAFEAQgBzAEEASABNAEEASQBBAEIAawBBAEcAawBBAGMAZwBCAGwAQQBHAE0AQQBkAEEAQgBzAEEASABrAEEASQBBAEIAMABBAEcAOABBAEkAQQBCAGwAQQBHAEUAQQBZAHcAQgBvAEEAQwBBAEEAYgB3AEIAMABBAEcAZwBBAFoAUQBCAHkAQQBBAG8AQQBDAFEAQQBKAEEAQwAwAEEASQBBAEIATgBBAEgAVQBBAGMAdwBCADAAQQBDAEEAQQBiAGcAQgB2AEEASABRAEEASQBBAEIAbwBBAEcARQBBAGQAZwBCAGwAQQBDAEEAQQBjAGcAQgB2AEEASABVAEEAZABBAEIAcABBAEcANABBAFoAdwBBAGcAQQBIAEEAQQBjAGcAQgB2AEEASABRAEEAYgB3AEIAagBBAEcAOABBAGIAQQBBAGcAQQBIAFUAQQBjAHcAQgBsAEEAQwBBAEEAYgBnAEIAbABBAEgAZwBBAGQAQQBBAHQAQQBHAGcAQQBiAHcAQgB3AEEAQwAwAEEAYwB3AEIAbABBAEcAdwBBAFoAZwBBAGcAQQBHADgAQQBjAGcAQQBnAEEASABRAEEAYQBBAEIAbABBAEMAQQBBAGQAQQBCADEAQQBHADQAQQBiAGcAQgBsAEEARwB3AEEAYwB3AEEAZwBBAEgAYwBBAGEAUQBCAHMAQQBHAHcAQQBJAEEAQgB1AEEARwA4AEEAZABBAEEAZwBBAEcAWQBBAGIAdwBCAHkAQQBHADAAQQBDAGcAQQBKAEEAQQBrAEEATABRAEEAZwBBAEUAUQBBAGIAdwBCAGwAQQBIAE0AQQBJAEEAQQBxAEEAQwBvAEEASwBnAEIATwBBAEUAOABBAFYAQQBBAHEAQQBDAG8AQQBLAGcAQQBnAEEASABjAEEAYgB3AEIAeQBBAEcAcwBBAEkAQQBCADMAQQBHAGsAQQBkAEEAQgBvAEEAQwBBAEEAYwB3AEIAMQBBAEcAMABBAGIAUQBCAGgAQQBIAEkAQQBhAFEAQgA2AEEARwBFAEEAZABBAEIAcABBAEcAOABBAGIAZwBBAGcAQQBDADAAQQBJAEEAQgB6AEEARwBrAEEAYgBnAEIAagBBAEcAVQBBAEkAQQBCADAAQQBHAGcAQQBaAFEAQQBnAEEARgBJAEEAUwBRAEIAQwBBAEMAQQBBAGQAdwBCAHAAQQBHAHcAQQBiAEEAQQBnAEEARwA0AEEAYgB3AEIAMABBAEMAQQBBAGEAQQBCAGgAQQBIAFkAQQBaAFEAQQBnAEEARwBFAEEASQBBAEIAeQBBAEcAOABBAGQAUQBCADAAQQBHAFUAQQBJAEEAQgAwAEEARwA4AEEASQBBAEIAMABBAEcAZwBBAFoAUQBBAGcAQQBHADgAQQBkAEEAQgBvAEEARwBVAEEAYwBnAEEAZwBBAEgATQBBAGMAQQBCAHYAQQBHAHMAQQBaAFEAQgB6AEEAQwB3AEEASQBBAEIAaABBAEcAdwBBAGIAQQBBAGcAQQBIAFEAQQBjAGcAQgBoAEEARwBZAEEAWgBnAEIAcABBAEcATQBBAEkAQQBCADMAQQBHAGsAQQBiAEEAQgBzAEEAQwBBAEEAZABBAEIAeQBBAEcARQBBAGIAZwBCAHoAQQBHAGsAQQBkAEEAQQBnAEEASABRAEEAYQBBAEIAbABBAEMAQQBBAGEAQQBCADEAQQBHAEkAQQBDAGcAQQBKAEEAQQBrAEEATABRAEEAZwBBAEUAawBBAFoAZwBBAGcAQQBIAFUAQQBjAHcAQgBwAEEARwA0AEEAWgB3AEEAZwBBAEUAOABBAFUAdwBCAFEAQQBFAFkAQQBMAEEAQQBnAEEARwA0AEEAWgBRAEIAMABBAEgAYwBBAGIAdwBCAHkAQQBHAHMAQQBJAEEAQgAwAEEASABrAEEAYwBBAEIAbABBAEMAQQBBAGIAUQBCADEAQQBIAE0AQQBkAEEAQQBnAEEARwBJAEEAWgBRAEEAZwBBAEcASQBBAGMAZwBCAHYAQQBHAEUAQQBaAEEAQgBqAEEARwBFAEEAYwB3AEIAMABBAEMAQQBBAGIAdwBCAHkAQQBDAEEAQQBiAGcAQgB2AEEARwA0AEEATABRAEIAaQBBAEgASQBBAGIAdwBCAGgAQQBHAFEAQQBZAHcAQgBoAEEASABNAEEAZABBAEEAZwBBAEgAUQBBAGIAdwBBAGcAQQBIAEEAQQBjAGcAQgBsAEEASABZAEEAWgBRAEIAdQBBAEgAUQBBAEkAQQBCAGoAQQBHAGcAQQBZAFEAQgB1AEEARwBjAEEAYQBRAEIAdQBBAEcAYwBBAEkAQQBCAHUAQQBHAFUAQQBlAEEAQgAwAEEAQwAwAEEAYQBBAEIAdgBBAEgAQQBBAGMAdwBBAEsAQQBBAGsAQQBDAFEAQQBKAEEAQwAwAEEASQBBAEIASgBBAEcANABBAEkAQQBCADAAQQBHAGcAQQBhAFEAQgB6AEEAQwBBAEEAYwB3AEIAagBBAEcAVQBBAGIAZwBCAGgAQQBIAEkAQQBhAFEAQgB2AEEAQwBBAEEAZABBAEIAbwBBAEcAVQBBAEkAQQBCAHoAQQBIAEEAQQBiAHcAQgByAEEARwBVAEEAYwB3AEEAZwBBAEcAMABBAGQAUQBCAHoAQQBIAFEAQQBJAEEAQgBpAEEARwBVAEEASQBBAEIAegBBAEcAVQBBAGQAQQBBAGcAQQBHAEUAQQBkAEEAQQBnAEEASABBAEEAYwBnAEIAcABBAEcAOABBAGMAZwBCAHAAQQBIAFEAQQBlAFEAQQBnAEEARABBAEEASQBBAEIAMABBAEcAOABBAEkAQQBCAHcAQQBIAEkAQQBaAFEAQgAyAEEARwBVAEEAYgBnAEIAMABBAEMAQQBBAGQAQQBCAG8AQQBHAFUAQQBiAFEAQQBnAEEARwBJAEEAWgBRAEIAagBBAEcAOABBAGIAUQBCAHAAQQBHADQAQQBaAHcAQQBnAEEARQBRAEEAVQBnAEIAegBBAEMAQQBBAEwAUQBBAGcAQQBHAGsAQQBaAGcAQQBnAEEASABNAEEAYwBBAEIAdgBBAEcAcwBBAFoAUQBCAHoAQQBDAEEAQQBZAGcAQgBsAEEARwBNAEEAYgB3AEIAdABBAEcAVQBBAEkAQQBCAEUAQQBGAEkAQQBjAHcAQQBnAEEASABRAEEAYQBBAEIAbABBAEMAQQBBAGIAZwBCAGwAQQBIAFEAQQBkAHcAQgB2AEEASABJAEEAYQB3AEEAZwBBAEgAYwBBAGEAUQBCAHMAQQBHAHcAQQBJAEEAQgB1AEEARwA4AEEAZABBAEEAZwBBAEcAWQBBAGQAUQBCAHUAQQBHAE0AQQBkAEEAQgBwAEEARwA4AEEAYgBnAEEAZwBBAEcARQBBAGMAdwBBAGcAQQBIAFEAQQBhAEEAQgBsAEEASABrAEEASQBBAEIAagBBAEcARQBBAGIAZwBCAHUAQQBHADgAQQBkAEEAQQBnAEEARwAwAEEAZABRAEIAcwBBAEgAUQBBAGEAUQBCAGoAQQBHAEUAQQBjAHcAQgAwAEEAQwBBAEEAWQBnAEIAbABBAEgAUQBBAGQAdwBCAGwAQQBHAFUAQQBiAGcAQQBnAEEARwBVAEEAWQBRAEIAagBBAEcAZwBBAEkAQQBCAHYAQQBIAFEAQQBhAEEAQgBsAEEASABJAEEAQwBnAEEASgBBAEMAMABBAEkAQQBBAHEAQQBDAG8AQQBVAEEAQgBvAEEARwBFAEEAYwB3AEIAbABBAEMAQQBBAE0AdwBBAHEAQQBDAG8AQQBDAGcAQQBKAEEAQQBrAEEATABRAEEAZwBBAEUARQBBAGIAQQBCAHMAQQBHADgAQQBkAHcAQgB6AEEAQwBBAEEAYwB3AEIAdwBBAEcAOABBAGEAdwBCAGwAQQBDADAAQQBkAEEAQgB2AEEAQwAwAEEAYwB3AEIAdwBBAEcAOABBAGEAdwBCAGwAQQBDAEEAQQBkAEEAQgB5AEEARwBFAEEAWgBnAEIAbQBBAEcAawBBAFkAdwBBAGcAQQBHAEkAQQBlAFEAQQBnAEEASABVAEEAYwB3AEIAcABBAEcANABBAFoAdwBBAGcAQQBFADQAQQBTAEEAQgBTAEEARgBBAEEASQBBAEIAeQBBAEcAVQBBAFoAQQBCAHAAQQBIAEkAQQBaAFEAQgBqAEEASABRAEEASQBBAEIAaABBAEcANABBAFoAQQBBAGcAQQBIAE0AQQBhAEEAQgB2AEEASABJAEEAZABBAEIAagBBAEgAVQBBAGQAQQBBAGcAQQBHAE0AQQBiAHcAQgB0AEEARwAwAEEAWQBRAEIAdQBBAEcAUQBBAGMAdwBBAGcAQQBIAFEAQQBhAEEAQgBoAEEASABRAEEASQBBAEIAaABBAEcAdwBBAGIAQQBCAHYAQQBIAGMAQQBJAEEAQgBPAEEARQBnAEEAVQBnAEIAUQBBAEMAQQBBAGQAQQBCAHYAQQBDAEEAQQBjAGcAQgBsAEEASABjAEEAYwBnAEIAcABBAEgAUQBBAFoAUQBBAGcAQQBHADQAQQBaAFEAQgA0AEEASABRAEEASQBBAEIAbwBBAEcAOABBAGMAQQBCAHoAQQBDAEEAQQBhAFEAQgB1AEEAQwBBAEEAZABBAEIAbwBBAEcAVQBBAEkAQQBCAFMAQQBFAGsAQQBRAGcAQQBLAEEAQQBrAEEAQwBRAEEAdABBAEMAQQBBAFQAUQBCAGgAQQBHAGsAQQBiAGcAQQBnAEEARwBJAEEAWgBRAEIAdQBBAEcAVQBBAFoAZwBCAHAAQQBIAFEAQQBJAEEAQgB2AEEASABZAEEAWgBRAEIAeQBBAEMAQQBBAGMAQQBCAG8AQQBHAEUAQQBjAHcAQgBsAEEAQwBBAEEATQBnAEEAZwBBAEcAawBBAGMAdwBBAGcAQQBHAEUAQQBiAEEAQgBzAEEARwA4AEEAZAB3AEIAcABBAEcANABBAFoAdwBBAGcAQQBIAE0AQQBkAFEAQgB0AEEARwAwAEEAWQBRAEIAeQBBAEcAawBBAGUAZwBCAGgAQQBIAFEAQQBhAFEAQgB2AEEARwA0AEEASQBBAEIAbQBBAEgASQBBAGIAdwBCAHQAQQBDAEEAQQBhAEEAQgAxAEEARwBJAEEAYwB3AEEAZwBBAEgAUQBBAGIAdwBBAGcAQQBIAE0AQQBjAEEAQgB2AEEARwBzAEEAWgBRAEIAegBBAEMAQQBBAEwAUQBBAGcAQQBIAE0AQQBjAEEAQgB2AEEARwBzAEEAWgBRAEIAegBBAEMAQQBBAGQAdwBCAHAAQQBHAHcAQQBiAEEAQQBnAEEASABNAEEAZABBAEIAcABBAEcAdwBBAGIAQQBBAGcAQQBHAEkAQQBaAFEAQQBnAEEARwBFAEEAWQBnAEIAcwBBAEcAVQBBAEkAQQBCADAAQQBHADgAQQBJAEEAQgBtAEEARwA4AEEAYwBnAEIAdABBAEMAQQBBAGQAQQBCADEAQQBHADQAQQBiAGcAQgBsAEEARwB3AEEAYwB3AEEAZwBBAEgAUQBBAGIAdwBBAGcAQQBHAFUAQQBZAFEAQgBqAEEARwBnAEEASQBBAEIAdgBBAEgAUQBBAGEAQQBCAGwAQQBIAEkAQQBJAEEAQgBwAEEARwA0AEEASQBBAEIAdwBBAEcAZwBBAFkAUQBCAHoAQQBHAFUAQQBJAEEAQQB6AEEAQwBBAEEAWgBRAEIAMgBBAEcAVQBBAGIAZwBBAGcAQQBIAGMAQQBhAFEAQgAwAEEARwBnAEEASQBBAEIAaABBAEMAQQBBAFoAQQBCAGwAQQBHAFkAQQBZAFEAQgAxAEEARwB3AEEAZABBAEEAZwBBAEgASQBBAGIAdwBCADEAQQBIAFEAQQBaAFEAQQBnAEEARwBZAEEAYwBnAEIAdgBBAEcAMABBAEkAQQBCADAAQQBHAGcAQQBaAFEAQQBnAEEARwBnAEEAZABRAEIAaQBBAEEAbwBBAEwAUQBBAHQAQQBDADAAQQAKAHMAdQBmAGYAaQB4ADoA:31b8e172-b470-440e-83d8-e6b185028602\nUseful show commands\n\nshow dmvpn [detail] - shows tunnel status, peers, up/down time, etc\nshow ip nhrp [brief] - shows NHRP cache, NHRP-specific details useful for phase 2, 3\nshow ip route next-hop-override - shows NH overrides for DMVPN phase 3\nshow crypto ike2 sa; show crypto ipsec sa - for troubleshooting IPsec when used with DMVPN\nDMVPN Phase 1 Configuration (No IPsec)\n\n\n```Hub Config ! Essential interface Tunnel100 ip address 192.168.100.11 255.255.255.0 ip nhrp map multicast dynamic ip nhrp network-id 100 tunnel source GigabitEthernet0/1 tunnel mode gre multipoint\n! Discretionary bandwidth 4000 ip mtu 1400 ip tcp adjust-mss 1360 ip nhrp authentication NHRPAUTH no ip split-horizon eigrp 100 ! necessary for EIGRP tunnel key 100 ! necessary in multi-hub designs\n``` Spoke Config\ninterface Tunnel100\nip address 192.168.100.31 255.255.255.0\nip nhrp network-id 100\nip nhrp nhs <TunnelIP> nbma <PublicIP> multicast\ntunnel source GigabitEthernet0/1\ntunnel destination <PublicIP>\n\n! Discretionary\nbandwidth 4000\nip mtu 1400\nip tcp adjust-mss 1360\nip nhrp authentication NHRPAUTH\ntunnel key 100 ! necessary in multi-hub designs\n\nDMVPN Phase 2 Configuration (No IPsec)\nHub Config\n!same as Phase 1, but including:\nno ip next-hop-self eigrp 100\n!so that hub doesn’t list itself as NH for spokes\n``` Spoke Config\n!same as Phase 1, but including:\n\ntunnel mode gre multipoint\n\n!so that spokes can form direct tunnels\n\n\nDMVPN Phase 3 Configuration (No IPsec)\n```Hub Config !same as Phase 1, but including:\nip nhrp redirect\n!so that hub will forward redirect messages to spokes after initial traffic, allowing spoke-to-spoke tunnels to form\n```Spoke Config\n!same as Phase 1, but including:\n\nip nhrp shortcut\ntunnel mode gre multipoint\n\n!to allow the spokes to install NHRP next hops into the routing table and form direct tunnels\n\n\nDMVPN IKEv1 IPsec Configuration [[IPsec|See IPsec for deep dive]]\n^218f2b\ncrypto isakmp policy 10\n encr aes 128\n hash sha256\n authentication pre-share\n group 16\n!\ncrypto isakmp key DMVPN_PSK address 0.0.0.0  \n!\ncrypto ipsec transform-set ESP-AES-256-SHA-512 esp-aes 256 esp-sha512-hmac \n mode transport\n!\ncrypto ipsec profile DMVPN_PROFILE\n set transform-set ESP-AES-256-SHA-512\n!\ninterface Tunnel0\n tunnel protection ipsec profile DMVPN_PROFILE\n!same as above, but instead of crypto isakmp key:\ncrypto keyring VRF_AWARE_PSK vrf UNDERLAY_TRANSPORT \n  pre-shared-key address 0.0.0.0 0.0.0.0 key DMVPN_PS\n\n\nDMVPN IKEv2 IPsec Configuration [[IPsec|See IPsec for deep dive]]\ncrypto ikev2 keyring DMVPN-KEYRING \npeer ANY\naddress 0.0.0.0 0.0.0.0\npre-shared-key CISCO456\n!\ncrypto ikev2 profile DMVPN-IKE\nmatch identity remote address 0.0.0.0\nauthentication remote pre-share\nauthentication local pre-share\nkeyring local DMVPN-KEYRING\n!\ncrypto ipsec transform-set SET1 esp-aes 256 esp-sha-hmac\nmode transport\n!\ncrypto ipsec profile DMVPN-IPSEC\nset transform-set SET1\nset ikev2-profile DMVPN-IKE\n!\ninterface Tunnel0\ntunnel protection ipsec profile DMVPN-IPSEC\n!Same as above, but under crypto ikev2 profile:\n match fvrf INET\n\n\nSee [[VRF#^187895|VRF]] page for FVRF config details"
  },
  {
    "objectID": "IPsec.html",
    "href": "IPsec.html",
    "title": "IPSec",
    "section": "",
    "text": "Include:\n\nData origin authentication\n\nVerifying where packet came from\n\nData integity\n\nEnsuring packet wasn’t changed in transit\n\nConfidentiality\n\nEncryption, preventing packet from being intercepted and read\nPrevented by limited allowed window\n\nConfidentiality is the mainly thought-of core feature\n\nIPSec uses symmetric key encryption\nPoint-to-point tunnels in almost all cases, GETVPN can be P2MP\nTunnel keys dynamically negotiated through IKE\nIKEv2 is superior but not supported by all platforms"
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Brendan’s Networking Notes",
    "section": "Education",
    "text": "Education\nUniversity of California, San Diego | San Diego, CA PhD in Mathematics | Sept 2011 - June 2015\nMacalester College | St. Paul MA B.A in Economics | Sept 2007 - June 2011"
  },
  {
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "Brendan’s Networking Notes",
    "section": "Experience",
    "text": "Experience\nWengo Analytics | Head Data Scientist | April 2018 - present\nGeoScynce | Chief Analyst | Spet 2012 - April 2018"
  },
  {
    "objectID": "BGP.html#origin-code",
    "href": "BGP.html#origin-code",
    "title": "BGP",
    "section": "Origin Code",
    "text": "Origin Code\n\nRarely used to influence path selection - inflexible\nIGP > EGP > Incomplete\nCould affect inbound or outbound routing\nConfiguration:\n\n    route-map ORIGIN\n     match ip address|ip as-path ...\n     set origin [igp|egp|incomplete]\n        \n    router bgp 100\n     neighbor <ip> route-map ORIGIN out\n\nMED\n\nBy default only compared when originating from same AS\nLowest is best - defaults to 0\nUsed to affect inbound routing\nCan use bgp always-compare-med under router BGP to allow comparison of MED between different ASs\nConfiguration:\n\n    route-map MED\n     match ip address|ip as-path ...\n     set metric 1000\n        \n    router bgp 100\n     neighbor <ip> route-map MED out"
  },
  {
    "objectID": "index.html#about-me",
    "href": "index.html#about-me",
    "title": "Bren’s Networking Notes",
    "section": "About me",
    "text": "About me\nI’m a network engineer with a passion for learning based in beautiful British Columbia, Canada. Aside from tech, I love weightlifting, hiking and gaming. You can find me on my LinkedIn or on my YouTube channel below."
  },
  {
    "objectID": "BGP.html#bgp-attributes",
    "href": "BGP.html#bgp-attributes",
    "title": "BGP",
    "section": "BGP Attributes",
    "text": "BGP Attributes\n\nWeight\n\nOnly used on the router where it is configured\nUsed to affect outbound routing.\nHigher value is better - default is 0 (32768 if originated locally)\nHighest in BGP path selection algorithm\nCisco proprietary\nConfiguration:\n\n    route-map SET_WEIGHT\n     match ip address|ip as-path ...\n     set weight 100\n    !\n    router bgp 100\n     neighbor <ip> route-map SET_WEIGHT in\n\n\nLocal Preference\n\nLocally significant (to the AS), does not transit outside AS.\nUsed to affect outbound routing.\nHigher value is better - defaults to 100\nConfiguration:\n\n    route-map SET_LP\n     match ip address|ip as-path ...\n     set local-preference 1000\n     !\n    router bgp 100\n     neighbor <ip> route-map SET_LP in\n\n\nAS-PATH\n\nChanged for each AS prefix transits through\nUsed to affect inbound routing\nCan be used to influence path selection with as-path prepending\nCan be ignored with bgp bestpath as-path ignore - this is dangerous and not recommended\nCan be limited in length with bgp maxas-limit <#>\nConfiguration:\n\n    route-map PREPEND\n     match ip address|ip as-path ...\n     set as-path prepend 100 100 100\n        !\n    router bgp 100\n     neighbor <ip> route-map PREPEND out\n\n\nOrigin Code\n\nRarely used to influence path selection - inflexible\nIGP > EGP > Incomplete\nCould affect inbound or outbound routing\nConfiguration:\n\n    route-map ORIGIN\n     match ip address|ip as-path ...\n     set origin [igp|egp|incomplete]\n        \n    router bgp 100\n     neighbor <ip> route-map ORIGIN out\n\nMED\n\nBy default only compared when originating from same AS\nLowest is best - defaults to 0\nUsed to affect inbound routing\nCan use bgp always-compare-med under router BGP to allow comparison of MED between different ASs\nConfiguration:\n\n    route-map MED\n     match ip address|ip as-path ...\n     set metric 1000\n        \n    router bgp 100\n     neighbor <ip> route-map MED out"
  },
  {
    "objectID": "BGP.html#key-features",
    "href": "BGP.html#key-features",
    "title": "BGP",
    "section": "Key Features",
    "text": "Key Features\n\nSummarization\n\nPrimarily done with the aggregate address <prefix> <mask> command\n\nOnly works for prefixes already in BGP table\nRouter performing summary installs null route into table for aggregate\nShould be used with as-set suffix - this will include AS-PATH information and prevent loops/suboptimal routes\n\nInherits community values of any specific prefixes\nFor example, if one of four specific prefixes has a no-export community, summary with as-set will as well\nThese can be modified or stripped with attribute-map suffix\nCan also use advertise-map suffix to select specific prefix which will determine attributes of summary\n\nBy default does not suppress specific prefixes - summary-only at the end of command will\nPrefixes summarized in this way have ATOMIC_AGGREGATE attribute assigned\nAlso assigned AGGREGATOR attribute specifying AS number and RID of aggregator\nCan selectively suppress specifc prefixes with suppress-map - all prefixes in map will be suppressed:\n\n      ip prefix-list SUPPRESS_PREFIX 150.1.1.0/24\n      !\n      route-map SUPPRESS_MAP permit 10\n       match ip address prefix-list SUPPRESS_PREFIX\n      !\n      router bgp 200  \n       aggregate-address 150.1.0.0 mask 255.255.0.0 suppress-map SUPPRESS_MAP as-set\n\nCan also use unsuppress-map combined with summary-only to advertise specific prefixes ^66c6ab\nSince this is per-neighbor it can be used for inbound path manipulation:\n\n      ip prefix-list NET_1 permit 10.0.1.0/24 \n      !\n      route-map UNSUPPRESS_MAP permit 10\n       match ip address prefix-list NET_1\n      !       \n      router bgp 200\n       aggregate-address 10.0.0.0 255.255.252.0 summary-only as-set\n       neighbor 155.1.37.7 unsuppress-map UNSUPPRESS_MAP\nAlternatively, can advertise a summary prefix in IGP with the network command - commonly done with a static null route\n\nRoute Reflection\n\nUsed to bypass full mesh requirement in iBGP\nConfigured with neighbor <ip> route-reflector-client on route reflector\nReflector must have full mesh if full reachability is required (unless using multiple reflectors)\nAbide by following 3 rules:\n\n\nRoutes learned from EBGP peers can be sent to other EBGP peers, clients, and non-clients.\nRoutes learned from client peers can be sent to EBGP peers, other client peers, and non-clients.\nRoutes learned from non-client peers can be sent to EBGP peers, and client peers, but not other non-clients.\n\n\nFunctions like DR/BDR in [[OSPF]] by default - does not insert itself into transit path\nCan be forced to transit RR with next-hop-self command if desired\n\nCommunities\n\nActivated for transport to peers with neighbor <ip> send-community\nMade more readable with global config command ip bgp-community new-format\nApplied to prefixes with set community <value1> <value2> ... <valueN> in route-map\nTo add communities without affecting existing, use set community additive <value1> <value2> ... <valueN>\nMatched with community-lists - like ACLs, both standard and expanded (extended) versions\n\nStandard version uses 1-99, only permits or denies communities\n\n  ip community-list 1 permit 100:10 100:20\n  ip community-list 1 deny no-export\n\nStandard version uses AND logic with multiple communities in one line, OR logic with multiple lines\nExpanded version functions the same but adds regular expression functionality\n\nSample config of setting community:\n\n          ip as-path access-list 1 permit 60$\n          !\n          route-map SET_COMMUNITY permit 10\n           match as-path 1\n           set community 100:200\n          !\n          route-map SET_COMMUNITY permit 100\n          !\n          router bgp 200\n           neighbor 155.1.45.4 send-community\n           neighbor 155.1.45.4 route-map SET_COMMUNITY out\n\nSample config of matching community:\n\n          ip community-list standard 100:200 permit 100:200\n          !\n          route-map SET_LOCAL_PREFERENCE permit 10\n           match community 100:200\n           set local-preference 200\n          !\n          route-map SET_LOCAL_PREFERENCE permit 100\n          !\n          router bgp 100\n           neighbor 155.1.13.3 route-map SET_LOCAL_PREFERENCE in\n\nWell-known communities:\n\nno-advertise\n\nSet with set community no-advertise\nSignals to not advertise the prefix with this community to any peer\n\nno-export\n\nSet with set community no-export\nSignals to not export this prefix from the AS - can be advertised within AS only\n\nlocal-as\n\nSet with set community local-as\nFunctions the same as no-export but also disallows advertisement between confederation sub-as\n\n\nDeleting communities done with a community-list referencing community to be deleted, then using set comm-list <comlist> delete under route-map\n\nConfederation\n\nUsed to reduce full-mesh BGP requirements by splitting one public AS into smaller sub-as\nSub-as use eBGP advertisement rules between each other, removing full mesh requirement\nNotable exception to eBGP behavior is that next-hop is not modified between confederation peers\nConfigured by using sub-as with router bgp command and using bgp confederation identifier <as> under router bgp\nOther sub-as defined with bgp confederation peers <sub-as> under router bgp\nCan be used in combination with route reflection\n\nNext-hop modification\n\nOther than next-hop-self, you can also manually define next-hop with a route-map:\n\n      route-map SET_NEXT_HOP_FROM_R8 permit 10\n      set ip next-hop 155.1.58.8\n      !\n      router bgp 100\n      neighbor 155.1.58.8 route-map SET_NEXT_HOP_FROM_R8 in\nBGP regexp ^f8087d\n\nCan be used to search for specifc AS-PATHs in table - for example: show ip bgp regexp ^$\nAbove will show prefixes originated locally with the AS. Cheat sheet here.\nCan be used to filter with ACLs with ip as-path: ip as-path access-list 1 permit _54$\nThen use match as-path under a route-map to apply modifications\n\nBGP backdoor\n\nCreated to prefer links via IGP over eBGP (raises AD of specific prefix to 200)\nConfigured with network <subnet> mask <netmask> backdoor under router BGP\n\nConditional Advertising\n\nAllows advertising based on existence of another prefix in table\nConfigured with neighbor <IP> advertise-map MAP1 [non-exist|exist-map] MAP2\nFirst map is prefix to advertise, second is prefix to monitor\nBGP checks on existence of MAP2 every 60 seconds\n\nConditional Route Injection\n\nFunctions similar to [[BGP#^66c6ab|unsuppress map]] in allowing specific prefix advertisement from aggregate\nDifference is it can be configured on routers not originating the aggregate route\nOne map matches aggregate and router originating summary, other map matches specific prefix to advertise\nConfiguration:\n\n      ip prefix-list INJECT_PREFIX permit 10.0.1.0/24\n      ip prefix-list AGGREGATE permit 10.0.0.0/22\n      ip prefix-list ROUTE_SOURCE permit 155.1.37.3/32\n      !\n      route-map INJECT_MAP permit 10\n       set ip address prefix-list INJECT_PREFIX\n       set origin igp\n      !\n      route-map EXIST_MAP permit 10\n       match ip address prefix-list AGGREGATE\n       match ip route-source prefix-list ROUTE_SOURCE\n      ! \n      router bgp 300\n       bgp inject-map INJECT_MAP exist-map EXIST_MAP\nRoute Filtering\n\nPreferably done per-neighbor with route-maps, but can be applied directly with prefix list or ACL\nneighbor 155.1.79.9 route-map FROM_R9 in for a route-map, with a deny in the route-map\nneighbor 192.10.1.254 prefix-list BLOCK_222 in for prefix-list\nneighbor 192.10.1.254 distribute-list BLOCK_222 in can be used for ACL filtering, not recommended\n\nMaximum prefix\n\nmaximum-prefix can be used to limit allowed prefix # from a peer\nBy default shuts down connection, can use warning-only or restart <minutes> prefixes if desired\nFor example: neighbor 155.1.108.10 maximum-prefix 20 80 restart 3\n\nBGP Dampening\n\nCan be used to prevent table instability from flapping routes\nAssigned to all prefixes with bgp dampening [<Half_Life> <ReuseLimit> <SuppressLimit> <MaximumSuppressTime>]\nCan also be assigned to specific prefixes with route-maps:\n\n      ip as-path access-list 100 permit _100$\n      !\n      route-map DAMPENING\n       match as-path 100\n       set dampening 4 750 2000 16\n      !\n      router bgp 200\n       bgp dampening route-map DAMPENING\nBGP Outbound Route Filtering\n\nAllows you to push a route filter to a remote neighbor\nBenefit is decrease in unnecessary route information as filtering occurs on neighbor before prefixes sent\nBoth peers must have orf capability enabled for it to function\nVerified locally with: show ip bgp neighbors <ip>, remotely with: show ip bgp neighbors <ip> received prefix-filter\n\n      ip prefix-list ORF deny 112.0.0.0/8\n      ip prefix-list ORF permit 0.0.0.0/0 le 32\n      !\n      router bgp 100\n       neighbor 155.1.45.5 capability orf prefix-list both\n       neighbor 155.1.45.5 prefix-list ORF in\nSee Redistribution for details on that\n\n\n\nUseful debugs\n\ndebug ip bgp\ndebug ip bgp updates"
  },
  {
    "objectID": "IPsec.html#useful-showdebug-commands",
    "href": "IPsec.html#useful-showdebug-commands",
    "title": "IPSec",
    "section": "Useful show/debug commands",
    "text": "Useful show/debug commands\n\nPhases:\n\nPhase 1:\n\nshow crypto isakmp sa - should show QM_IDLE as state and status as ACTIVE\ndebug crypto isakmp, or debug crypto condition peer ipv4 <IP> to debug for one specific peer\n\nPhase 2:\n\nshow crypto ipsec sa [<peer IP>]\ndebug crypto ipsec"
  },
  {
    "objectID": "IPsec.html#crypto-profile-ipsec-config-w-ikev1-with-without-gre",
    "href": "IPsec.html#crypto-profile-ipsec-config-w-ikev1-with-without-gre",
    "title": "IPSec",
    "section": "Crypto Profile IPSec Config w/ IKEv1 (with & without GRE)",
    "text": "Crypto Profile IPSec Config w/ IKEv1 (with & without GRE)\n    interface Tunnel0  \n     ip address <ip & mask>\n     tunnel source <ip>\n     tunnel destination <ip>\n      \n    crypto isakmp policy 10\n     encryption aes 256\n     hash md5\n     authentication pre-share\n     group 14\n     lifetime 3600 \n    !\n    crypto isakmp key <PSK> address <remote outside interface IP with subnet mask>\n    !\n    crypto ipsec transform-set <ts-name> esp-3des esp-md5-hmac\n     mode transport\n     !mode tunnel if using VTI\n    \n    crypto ipsec profile <profile-name>\n     set transform-set <ts-name>\n      \n    interface Tunnel0\n     tunnel protection ipsec profile <profile-name>\n     ip mtu 1400\n     ip tcp adjust-mss 1360\n     !optionally can define tunnel mode as ipsec to bypass GRE and use VTI - 'tunnel mode ipsec ipv4'\n    \n    !note that routing through tunnel must exist for ipsec sa to form - routing not included in config\n    !can do underlay and overlay routing protocols, static routing, front door vrfs, many options"
  },
  {
    "objectID": "IPsec.html#crypto-profile-ipsec-config-w-ikev2-with-without-gre",
    "href": "IPsec.html#crypto-profile-ipsec-config-w-ikev2-with-without-gre",
    "title": "IPSec",
    "section": "Crypto Profile IPSec Config w/ IKEv2 (with & without GRE)",
    "text": "Crypto Profile IPSec Config w/ IKEv2 (with & without GRE)\n    interface Tunnel0  \n     ip address <ip & mask>\n     tunnel source <ip>\n     tunnel destination <ip>\n      \n    crypto ikev2 keyring <keyring-name>\n     peer ANY\n     address 0.0.0.0 0.0.0.0 ! any host for DMVPN, specific host for site-to-site\n     pre-shared-key <psk>\n    !\n    crypto ikev2 profile <ike-prof-name>\n     match identity remote address 0.0.0.0 ! any host for DMVPN, specific host for site-to-site\n     authentication remote pre-share\n     authentication local pre-share\n     keyring local <keyring-name>\n    !\n    crypto ipsec transform-set <ts-name> esp-aes 256 esp-sha-hmac\n     mode transport\n     !mode tunnel if using VTI\n    !\n    crypto ipsec profile <profile-name>\n     set transform-set <ts-name>\n     set ikev2-profile <ike-prof-name>\n    !\n    interface Tunnel0\n     tunnel protection ipsec profile <profile-name>\n     !optionally can define tunnel mode as ipsec to bypass GRE and use VTI - 'tunnel mode ipsec ipv4'\n    \n    !note that routing through tunnel must exist for ipsec sa to form - routing not included in config\n    !can do underlay and overlay routing protocols, static routing, front door vrfs, many options"
  },
  {
    "objectID": "IPsec.html#crypto-map-ipsec-config-w-ikev1-with-gre",
    "href": "IPsec.html#crypto-map-ipsec-config-w-ikev1-with-gre",
    "title": "IPSec",
    "section": "Crypto Map IPSec Config w/ IKEv1 (with GRE)",
    "text": "Crypto Map IPSec Config w/ IKEv1 (with GRE)\n    interface Tunnel0  \n    ip address <ip & mask>\n    tunnel source <ip>\n    tunnel destination <ip>\n    ip mtu 1400\n    ip tcp adjust-mss 1360\n      \n    crypto isakmp policy 10\n     encryption aes 256\n     hash md5\n     authentication pre-share\n     group 14\n     lifetime 180 \n    !\n    crypto isakmp key <PSK> address <remote outside interface IP with 32 bit subnet mask>\n    !\n    crypto ipsec transform-set <ts-name> esp-3des esp-md5-hmac\n        mode transport\n    !\n    access-list 120 permit gre host <local outside interface ip> host <remote outside interface IP>\n      \n    crypto map <cm-name> 10 ipsec-isakmp   \n    set peer <ip>\n    set transform-set <ts-name> \n    match address 120  \n      \n    interface Ethernet0/0   \n    crypto map <cm-name>\n\nSee DMVPN page for details on DMVPN IPsec config"
  },
  {
    "objectID": "IPsec.html#see-dmvpn-page-for-details-on-dmvpn-ipsec-config",
    "href": "IPsec.html#see-dmvpn-page-for-details-on-dmvpn-ipsec-config",
    "title": "IPSec",
    "section": "See DMVPN page for details on DMVPN IPsec config",
    "text": "See DMVPN page for details on DMVPN IPsec config"
  },
  {
    "objectID": "IPsec.html#phases",
    "href": "IPsec.html#phases",
    "title": "IPSec",
    "section": "Phases",
    "text": "Phases\n- Phase one establishes ISAKMP SA, secure tunnel to negotiate phase two through\n- Phase two establishes IPsec SA, tunnel used to protect actual data traffic\n- **In Phase 1:**\n    - Auth usually either PSK (Pre-shared key) or certificate based\n    - DH^[Diffie Hellman - asymmetric key algorithm used for IPsec, SSL, SSH and others. Peers create public and private keys, exchange public key and generate symmetric key (shared secret) with peer's private key^[[images/DH.png|See Example]]] used to exchange crypto keys\n        - Higher DH number is more secure\n    - Encryption algorithms used to protect traffic\n        - Possibilities include DES, 3DES, AES-128, AES-256, etc\n    - Authentication hashes used to ensure packet wasn't modified in transit\n        - IKEv1 supports MD5, SHA-1\n    - IKE parameters *must match* in order for phase 1 to complete successfully\n    - Main mode and aggressive mode both options for completing this step\n        - Main mode preferred as aggressive has security issues\n- **In Phase 2, following are negotiated:**\n    - Security protocol\n        - ESP (Encapsulating Security Payload) or AH (Authentication Header)\n        - AH does not support encryption, rarely used\n    - Encapsulation modes\n        - Tunnel or transport\n        - Tunnel adds new IP header, used for actually tunneling traffic\n        - Transport mode used for host-to-host applications or combined with GRE which does the tunneling itself\n    - Encryption (used for actual data traffic, not just tunnel)\n        - DES, 3DES, AES-128, AES-256, etc\n    - Authentication (hashing)\n        - MD5, SHA, etc\n    - Combination of the above called IPsec **Transform Set**\n    - Only performed in QM (quick mode)\n\nUDP 500, 4500 are ports used to establish control plane\n\n4500 is only used with NAT-T1\n\nIPsec dataplane uses ports 50 (ESP), 51 (AH) or 4500 with NAT-T"
  },
  {
    "objectID": "IPsec.html#ipsec-phases",
    "href": "IPsec.html#ipsec-phases",
    "title": "IPSec",
    "section": "IPsec Phases",
    "text": "IPsec Phases\n\nTwo phases:\n\nPhase one establishes ISAKMP SA, secure tunnel to negotiate phase two through\nPhase two establishes IPsec SA, tunnel used to protect actual data traffic\nIn Phase 1:\n\nAuth usually either PSK (Pre-shared key) or certificate based\nDH1 used to exchange crypto keys\n\nHigher DH number is more secure\n\nEncryption algorithms used to protect traffic\n\nPossibilities include DES, 3DES, AES-128, AES-256, etc\n\nAuthentication hashes used to ensure packet wasn’t modified in transit\n\nIKEv1 supports MD5, SHA-1\n\nIKE parameters must match in order for phase 1 to complete successfully\nMain mode and aggressive mode both options for completing this step\n\nMain mode preferred as aggressive has security issues\n\n\nIn Phase 2, following are negotiated:\n\nSecurity protocol\n\nESP (Encapsulating Security Payload) or AH (Authentication Header)\nAH does not support encryption, rarely used\n\nEncapsulation modes\n\nTunnel or transport\nTunnel adds new IP header, used for actually tunneling traffic\nTransport mode used for host-to-host applications or combined with GRE which does the tunneling itself\n\nEncryption (used for actual data traffic, not just tunnel)\n\nDES, 3DES, AES-128, AES-256, etc\n\nAuthentication (hashing)\n\nMD5, SHA, etc\n\nCombination of the above called IPsec Transform Set\nOnly performed in QM (quick mode)\n\n\nUDP 500, 4500 are ports used to establish control plane\n\n4500 is only used with NAT-T2\n\nIPsec dataplane uses ports 50 (ESP), 51 (AH) or 4500 with NAT-T"
  }
]